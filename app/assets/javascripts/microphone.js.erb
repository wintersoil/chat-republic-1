
$( document ).on('turbolinks:load', function() {
  try{
    navigator.mediaDevices.getUserMedia({audio:true}).then(stream => {handlerFunction(stream)});
  }
  catch(err){
    navigator.mediaDevices.webkitGetUserMedia.getUserMedia({audio:true}).then(stream => {handlerFunction(stream)});
  }
  try{
    navigator.mediaDevices.mozGetUserMedia.getUserMedia({audio:true}).then(stream => {handlerFunction(stream)});
  }
  catch(err2){

  }
  let recording = false;
  $("#record").click(function(e){
    if(recording == false)
    {
      audioChunks = [];
      window.rec.start();
      recording = true;
      $("#record").attr("src", '<%= image_url("microphone_off.svg") %>');
    }
    else {
      window.rec.stop();
    }
  });

  function handlerFunction(stream) {
    window.rec = new MediaRecorder(stream);
    window.rec.ondataavailable = e => {
      audioChunks.push(e.data);
      let url1;
      if(rec.state == "inactive"){
        let blob = new Blob(audioChunks,{type:"audio/mpeg"});
        try{
         url1 = webkitURL.createObjectURL(blob);
      }
      catch(err)
      {
        url1 = URL.createObjectURL(blob);
      }
      $("#recordedAudio").attr("src", url1);
        $("#recordedAudio").attr("controls", "true");
        $("#recordedAudio").attr("autoplay", "true");
        var reader = new FileReader();
        reader.onload = function(event){
          var fd = {};
          fd["fname"] = "test.mp3";
          fd["data"] = event.target.result;
          $.ajax({
            type: "POST",
            url: "/uploadMP3",
            data: fd,
            dataType: "text"
          }).done(function(data){
            console.log(data);
          });
        };
        reader.readAsDataURL(blob);
      }
    }
  }
)};
