<div class="experimental-messages" data-attr="<%= current_user.id %>">
</div>
<div class="outer-whitechat" style="display:flex;justify-content:center;align-self:center">
  <div class="whitechat">
    <div class="messages-display">
      <div class="inner-messages">
        <% @messaging.each do |msg| %>
          <%= render "messages/message", msg: msg, nobroadcast:true %>
        <% end %>
      </div>
    </div>
    <div class="messages-input">
      <%= form_for @message, url: {action: "create"}, html: {class: "form-chatroom"}, remote: true do |f| %>
        <%= f.text_field :body, class:"messages-input-field", autocomplete: :off %>
        <%= f.submit "Send", class:"messages-input-button", placeholder: "Type text and send to everyone!" %>
        <%= image_submit_tag("https://aliphotoappimages.s3.ca-central-1.amazonaws.com/svg/private_message_send.svg", height:'50', width:'50', class:'private-message-send') %>
      <% end %>
      <%= image_tag("https://aliphotoappimages.s3.ca-central-1.amazonaws.com/svg/microphone.svg", id:"record", height:'90px', width:'90px') %>
      <%= image_tag("https://aliphotoappimages.s3.ca-central-1.amazonaws.com/svg/video.svg", id:"recordVideo", height:'90px', width:'90px') %>
      <img src="https://aliphotoappimages.s3.ca-central-1.amazonaws.com/svg/microphone_off.svg" height="0px" width="0px" />
      <img src="https://aliphotoappimages.s3.ca-central-1.amazonaws.com/svg/videoOff.svg" height="0px" width="0px" />
      <%= image_tag("https://aliphotoappimages.s3.ca-central-1.amazonaws.com/svg/private_message_send.svg", height:'0', width:'0') %>
      <%= image_tag("https://aliphotoappimages.s3.ca-central-1.amazonaws.com/svg/private_message_send_hover.svg", height:'0', width:'0') %>
    </div>
  </div>
</div>
<div class="online2-outer">
  <div id="online2">
    <h2 style="padding:13px;margin-block-start: 0px;">People currently in chatroom (online)</h2>
    <% @users.each do |usering| %>
      <% if usering.online? == false %>
        <%= content_tag(:div, id: "user_" + usering.id.to_s, class:"hidden-user") do -%>
          <div style="display:flex; align-items:center;">
            <%= image_tag(usering.profile_picture.to_s, width:'100', height:'100') %> <span style="font-size:25px;margin-left: 20px;"><%= usering.first_name + " " + usering.last_name %></span>
          </div>
        <% end -%>
      <% end %>
      <% if usering.online? == true %>
        <%= content_tag(:div, id: "user_" + usering.id.to_s, class:"background-green-online") do -%>
          <div style="display:flex; align-items:center;">
            <%= image_tag(usering.profile_picture.to_s, width:'100', height:'100') %> <span style="font-size:25px;margin-left: 20px;"><%= usering.first_name + " " + usering.last_name %></span>
          </div>
        <% end -%>
      <% end %>
    <% end %>
  </div>
</div>
<%= audio_tag("definite.mp3", autoplay: false, controls: true, style: "display:none", id:"hollow-copy") %>
<%= audio_tag("definite_iphone.m4r", autoplay: false, controls: true, style: "display:none", id:"hollow-copy-1") %>
<script>
$(document).ready(function(){
var iOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;

if iOS == false
{

    let audio_record = function(){
    try{
      navigator.mediaDevices.getUserMedia({audio:true}).then(stream => {handlerFunction(stream)});
    }
    catch(err){
      try{
        navigator.mediaDevices.webkitGetUserMedia({audio:true}).then(stream => {handlerFunction(stream)});
      }
      catch(err){
        try{
        navigator.mediaDevices.mozGetUserMedia({audio:true}).then(stream => {handlerFunction(stream)});
        }
        catch(err){
          console.log("If all media requests fails,   Error:   " + err);
        }
      }
    }
    }
    audio_record();
    let recording = false;
    $("#record").click(function(e){
    if(recording == false)
    {
      audioChunks = [];
      window.rec.start();
      recording = true;
      var hover = "https://aliphotoappimages.s3.ca-central-1.amazonaws.com/svg/microphone_off.svg";
      $("#record").attr( "src", hover );
      $("#record").attr( "height", "90px" );
      $("#record").attr( "width", "90px");
    }
    else {
      recording = false;
      var hover = "https://aliphotoappimages.s3.ca-central-1.amazonaws.com/svg/microphone.svg";
      $("#record").attr( "src", hover );
      $("#record").attr( "height", "90px" );
      $("#record").attr( "width", "90px");
      window.rec.stop();
    }
    });

    function handlerFunction(stream) {
    window.rec = new MediaRecorder(stream);
    window.rec.ondataavailable = e => {
      audioChunks.push(e.data);
      let url1;
      if(rec.state == "inactive"){
        let blob = new Blob(audioChunks,{type:"audio/mpeg"});
        try{
         url1 = webkitURL.createObjectURL(blob);
      }
      catch(err)
      {
        url1 = URL.createObjectURL(blob);
      }
        var reader = new FileReader();
        reader.onload = function(event){
          var fd = {};
          fd["fname"] = "test.mpeg";
          fd["data"] = event.target.result;
          $.ajax({
            type: "POST",
            url: "/uploadMP3",
            data: fd,
            dataType: "text"
          }).done(function(data){
          });
        };
        reader.readAsDataURL(blob);
      }
    }
    }

    let video_record = function(){
      try{
        navigator.mediaDevices.getUserMedia({video:true,audio:true}).then(stream => {handlerFunctionVideo(stream)});
      }
      catch(err){
        try{
        navigator.mediaDevices.webkitGetUserMedia({video:true,audio:true}).then(stream => {handlerFunctionVideo(stream)});
        }
        catch(err){
          try{
          navigator.mediaDevices.mozGetUserMedia({video:true,audio:true}).then(stream => {handlerFunctionVideo(stream)});
          }
          catch(err)
          {
            console.log("If all media requests fails,    Error:   " + err);
          }
        }
      }
    }
    video_record();
    let recordingVideo = false;
    $("#recordVideo").click(function(e){
      if(recordingVideo == false)
      {
        audioChunks = [];
        window.recVideo.start();
        recordingVideo = true;
        var hover = "https://aliphotoappimages.s3.ca-central-1.amazonaws.com/svg/videoOff.svg";
        $("#recordVideo").attr( "src", hover );
        $("#recordVideo").attr( "height", "90px" );
        $("#recordVideo").attr( "width", "90px");
      }
      else {
        recordingVideo = false;
        var hover = "https://aliphotoappimages.s3.ca-central-1.amazonaws.com/svg/video.svg";
        $("#recordVideo").attr( "src", hover );
        $("#recordVideo").attr( "height", "90px" );
        $("#recordVideo").attr( "width", "90px");
        window.recVideo.stop();
      }
    });

    function handlerFunctionVideo(stream) {
    window.recVideo = new MediaRecorder(stream);
    window.recVideo.ondataavailable = e => {
      audioChunks.push(e.data);
      let url1;
      if(window.recVideo.state == "inactive"){
        let blob = new Blob(audioChunks,{type:"video/mp4"});
        try{
         url1 = webkitURL.createObjectURL(blob);
      }
      catch(err)
      {
        url1 = URL.createObjectURL(blob);
      }
        var reader = new FileReader();
        reader.onload = function(event){
          var fd = {};
          fd["fname"] = "test.mp4";
          fd["data"] = event.target.result;
          $.ajax({
            type: "POST",
            url: "/uploadMP4",
            data: fd,
            dataType: "text"
          }).done(function(data){
          });
        };
        reader.readAsDataURL(blob);
      }
    }
    }

}
else {
  //is an iPhone
  let audio_record = function(){
  try{
    navigator.mediaDevices.getUserMedia({audio:true}).then(stream => {handlerFunction(stream)});
  }
  catch(err){
    try{
      navigator.mediaDevices.webkitGetUserMedia({audio:true}).then(stream => {handlerFunction(stream)});
    }
    catch(err){
      try{
      navigator.mediaDevices.mozGetUserMedia({audio:true}).then(stream => {handlerFunction(stream)});
      }
      catch(err){
        console.log("If all media requests fails,   Error:   " + err);
      }
    }
  }
  }
  audio_record();
  let recording = false;
  $("#record").click(function(e){
  if(recording == false)
  {
    audioChunks = [];
    window.rec.start();
    recording = true;
    var hover = "https://aliphotoappimages.s3.ca-central-1.amazonaws.com/svg/microphone_off.svg";
    $("#record").attr( "src", hover );
    $("#record").attr( "height", "90px" );
    $("#record").attr( "width", "90px");
  }
  else {
    recording = false;
    var hover = "https://aliphotoappimages.s3.ca-central-1.amazonaws.com/svg/microphone.svg";
    $("#record").attr( "src", hover );
    $("#record").attr( "height", "90px" );
    $("#record").attr( "width", "90px");
    window.rec.stop();
    audio_record();
  }
  });

  function handlerFunction(stream) {
  window.rec = new MediaRecorder(stream);
  window.rec.ondataavailable = e => {
    audioChunks.push(e.data);
    let url1;
    if(rec.state == "inactive"){
      let blob = new Blob(audioChunks,{type:"audio/mpeg"});
      try{
       url1 = webkitURL.createObjectURL(blob);
    }
    catch(err)
    {
      url1 = URL.createObjectURL(blob);
    }
      var reader = new FileReader();
      reader.onload = function(event){
        var fd = {};
        fd["fname"] = "test.mpeg";
        fd["data"] = event.target.result;
        $.ajax({
          type: "POST",
          url: "/uploadMP3",
          data: fd,
          dataType: "text"
        }).done(function(data){
        });
      };
      reader.readAsDataURL(blob);
    }
  }
  }

  let video_record = function(){
    try{
      navigator.mediaDevices.getUserMedia({video:true,audio:true}).then(stream => {handlerFunctionVideo(stream)});
    }
    catch(err){
      try{
      navigator.mediaDevices.webkitGetUserMedia({video:true,audio:true}).then(stream => {handlerFunctionVideo(stream)});
      }
      catch(err){
        try{
        navigator.mediaDevices.mozGetUserMedia({video:true,audio:true}).then(stream => {handlerFunctionVideo(stream)});
        }
        catch(err)
        {
          console.log("If all media requests fails,    Error:   " + err);
        }
      }
    }
  }
  video_record();
  let recordingVideo = false;
  $("#recordVideo").click(function(e){
    if(recordingVideo == false)
    {
      audioChunks = [];
      window.recVideo.start();
      recordingVideo = true;
      var hover = "https://aliphotoappimages.s3.ca-central-1.amazonaws.com/svg/videoOff.svg";
      $("#recordVideo").attr( "src", hover );
      $("#recordVideo").attr( "height", "90px" );
      $("#recordVideo").attr( "width", "90px");
    }
    else {
      recordingVideo = false;
      var hover = "https://aliphotoappimages.s3.ca-central-1.amazonaws.com/svg/video.svg";
      $("#recordVideo").attr( "src", hover );
      $("#recordVideo").attr( "height", "90px" );
      $("#recordVideo").attr( "width", "90px");
      window.recVideo.stop();
      video_record();
    }
  });

  function handlerFunctionVideo(stream) {
  window.recVideo = new MediaRecorder(stream);
  window.recVideo.ondataavailable = e => {
    audioChunks.push(e.data);
    let url1;
    if(window.recVideo.state == "inactive"){
      let blob = new Blob(audioChunks,{type:"video/mp4"});
      try{
       url1 = webkitURL.createObjectURL(blob);
    }
    catch(err)
    {
      url1 = URL.createObjectURL(blob);
    }
      var reader = new FileReader();
      reader.onload = function(event){
        var fd = {};
        fd["fname"] = "test.mp4";
        fd["data"] = event.target.result;
        $.ajax({
          type: "POST",
          url: "/uploadMP4",
          data: fd,
          dataType: "text"
        }).done(function(data){
        });
      };
      reader.readAsDataURL(blob);
    }
  }
  }

}
});

</script>
