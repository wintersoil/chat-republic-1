<div>
  I am on video page now!
  <%= link_to "Destroy connection", video_path(id: @client.id), method: :delete %>
</div>
<div class="both-videos">
  <div class="sending-video">
    <div class="sending-video-header">
      <div class="inner-sending-video-header">
        <% if current_user.profile_picture.present? %>
          <%= image_tag(current_user.profile_picture.to_s, height:'120px', width:'120px',class:"profile-rounded") %>
        <% else %>
          <%= image_tag("https://aliphotoappimages.s3.ca-central-1.amazonaws.com/svg/avatar.png",width:'150',height:'150',class:"profile-rounded") %>
        <% end %>
        <%= current_user.first_name %> <%= current_user.last_name %>
      </div>
    </div>
    <video autoplay muted id="sending-video" width="480px" height="270px"></video>
  </div>
  <div class="receiving-video">
    <div class="receiving-video-header">
      <div class="inner-receiving-video-header">
        <% if @client.profile_picture.present? %>
          <%= image_tag(@client.profile_picture.to_s, height:'120px', width:'120px',class:"profile-rounded") %>
        <% else %>
          <%= image_tag("https://aliphotoappimages.s3.ca-central-1.amazonaws.com/svg/avatar.png",width:'150',height:'150',class:"profile-rounded") %>
        <% end %>
        <%= @client.first_name %> <%= @client.last_name %>
      </div>
    </div>
    <img id="returned-photo" src="" width="700px" height="395px">
  </div>
</div>
<%= image_tag("https://aliphotoappimages.s3.ca-central-1.amazonaws.com/svg/microphone.svg", id:"record", class:"record-audio-live-video-button", height:'90px', width:'90px') %>
  <div id="video-quality" data-width="1920" data-height="1080">
    1920 × 1080
  </div>
  <div id="video-quality" data-width="1280" data-height="720">
    1280 x 720
  </div>
  <div id="video-quality" data-width="720" data-height="480">
    720 × 480
  </div>
  <div id="video-quality" data-width="100" data-height="56">
    100 x 56
  </div>
<div id="receiving-audio">
</div>
<script>
$( document ).on('turbolinks:load', function() {
  let video;
  const changeQuality = (w,h) => {
    video = document.getElementById('sending-video');
    try{
      navigator.mediaDevices.getUserMedia({video: {width: w, height: h}}).then((stream) => video.srcObject = stream);
    }
    catch(err)
    {
      console.log("Live video failed:     Error:    " + err);
    }
  }
  changeQuality(100, 56);

  $("#video-quality").click(function(){
    changeQuality(parseInt( $(this).attr("data-width") ), parseInt( $(this).attr("data-height") ) );
  });

  const getFrame = () => {
    const canvas = document.createElement('canvas');
    canvas.width = video.videoWidth;
    canvas.height = video.videoHeight;
    canvas.getContext('2d').drawImage(video, 0, 0);
    const data = canvas.toDataURL('image/jpeg');
    return data;
  }
  const img = document.getElementById("returned-photo");
  const WS_URL2 = 'wss://www.downlink.online/cable';
  const ws = new WebSocket(WS_URL2);

  const FPS = 3;
  let msg;
  msg = {
    command: 'subscribe',
    identifier: JSON.stringify({
      channel: 'VideoChannel',
    }),
  };
  ws.onopen = () => {
    console.log('Connected to ${WS_URL}');
    ws.send(JSON.stringify(msg));
    setInterval(() => {
      msg = {
        command: 'message',
        identifier: JSON.stringify({
          channel: "VideoChannel",
        }),
        data: JSON.stringify({
          action: 'handle_messages',
          image: getFrame(),
          receiver_id: <%= @client.id %>,
        }),
      };
      ws.send(JSON.stringify(msg));
    }, 1000 / FPS);
  }


let audio_record = function(){
try{
  navigator.mediaDevices.getUserMedia({audio:true}).then(stream => {handlerFunction(stream)});
}
catch(err){
  try{
    navigator.mediaDevices.webkitGetUserMedia({audio:true}).then(stream => {handlerFunction(stream)});
  }
  catch(err){
    try{
    navigator.mediaDevices.mozGetUserMedia({audio:true}).then(stream => {handlerFunction(stream)});
    }
    catch(err){
      console.log("If all media requests fails,   Error:   " + err);
    }
  }
}
}
audio_record();
let recording = false;
$("#record").click(function(e){
if(recording == false)
{
  audioChunks = [];
  window.rec.start();
  recording = true;
  var hover = "https://aliphotoappimages.s3.ca-central-1.amazonaws.com/svg/microphone_off.svg";
  $("#record").attr( "src", hover );
  $("#record").attr( "height", "90px" );
  $("#record").attr( "width", "90px");
}
else {
  recording = false;
  var hover = "https://aliphotoappimages.s3.ca-central-1.amazonaws.com/svg/microphone.svg";
  $("#record").attr( "src", hover );
  $("#record").attr( "height", "90px" );
  $("#record").attr( "width", "90px");
  window.rec.stop();
}
});

function handlerFunction(stream) {
window.rec = new MediaRecorder(stream);
window.rec.ondataavailable = e => {
  audioChunks.push(e.data);
  let url1;
  if(rec.state == "inactive"){
    let blob = new Blob(audioChunks,{type:"audio/mp3"});
    try{
     url1 = webkitURL.createObjectURL(blob);
  }
  catch(err)
  {
    url1 = URL.createObjectURL(blob);
  }
    var reader = new FileReader();
    reader.onload = function(event){
      var fd = {};
      fd["client"] = '<%=  @client.id %>'
      fd["fname"] = "test.mp3";
      fd["data"] = event.target.result;
      $.ajax({
        type: "POST",
        url: "/liveVideoMP3",
        data: fd,
        dataType: "text"
      }).done(function(data){
      });
    };
    reader.readAsDataURL(blob);
  }
}
}
});
</script>
